/*! For license information please see createVectorTilePolygons.js.LICENSE.txt */
import{a as R}from"./chunk-LL4PRXXO.js";import{a as It}from"./chunk-RIW4PILL.js";import{a as M}from"./chunk-RDVL7HNQ.js";import{a as bt}from"./chunk-OKAWXMC7.js";import"./chunk-FYZYSHA7.js";import"./chunk-CRU5R7HF.js";import"./chunk-WZ52TQTL.js";import"./chunk-5KPQNVA2.js";import{a as W}from"./chunk-DBOVA5XH.js";import"./chunk-PPN6SLYU.js";import{h as z}from"./chunk-SOWUYSYI.js";import"./chunk-I36V6CKP.js";import{a as o,b as nt,d as j}from"./chunk-WG62ICZK.js";import{a as et}from"./chunk-EEN7GMYN.js";import"./chunk-SXYTVHGU.js";import"./chunk-RAWIUDJR.js";import"./chunk-KGKDCW56.js";import"./chunk-G4IO3CPJ.js";import{e as A}from"./chunk-GBRF7ES3.js";var kt=new o,Bt=new j,Nt=new z,E={min:void 0,max:void 0,indexBytesPerElement:void 0};function Pt(t){let e=new Float64Array(t),n=0;E.indexBytesPerElement=e[n++],E.min=e[n++],E.max=e[n++],o.unpack(e,n,kt),n+=o.packedLength,j.unpack(e,n,Bt),n+=j.packedLength,z.unpack(e,n,Nt)}function Tt(t){let e=t.length,n=0;for(let r=0;r<e;++r)n+=R.packedLength+3+t[r].batchIds.length;return n}function Ct(t,e,n){let r=e.length,o=2+r*M.packedLength+1+Tt(n),a=new Float64Array(o),i=0;a[i++]=t,a[i++]=r;for(let t=0;t<r;++t)M.pack(e[t],a,i),i+=M.packedLength;let s=n.length;a[i++]=s;for(let t=0;t<s;++t){let e=n[t];R.pack(e.color,a,i),i+=R.packedLength,a[i++]=e.offset,a[i++]=e.count;let r=e.batchIds,o=r.length;a[i++]=o;for(let t=0;t<o;++t)a[i++]=r[t]}return a}var yt=32767,wt=new o,Ht=new o,St=new o,Ut=new o,Ft=new o,Lt=new nt,Mt=new z;function Rt(t,e){let n;Pt(t.packedBuffer),n=2===E.indexBytesPerElement?new Uint16Array(t.indices):new Uint32Array(t.indices);let r=new Uint16Array(t.positions),a=new Uint32Array(t.counts),i=new Uint32Array(t.indexCounts),s=new Uint32Array(t.batchIds),f=new Uint32Array(t.batchTableColors),c=new Array(a.length),h=kt,l=Bt,u=Nt,m=E.min,p=E.max,d=t.minimumHeights,I=t.maximumHeights;A(d)&&A(I)&&(d=new Float32Array(d),I=new Float32Array(I));let k,g,w,b=r.length/2,y=r.subarray(0,b),N=r.subarray(b,2*b);bt.zigZagDeltaDecode(y,N);let L=new Float64Array(3*b);for(k=0;k<b;++k){let t=y[k],e=N[k],n=et.lerp(u.west,u.east,t/yt),r=et.lerp(u.south,u.north,e/yt),a=nt.fromRadians(n,r,0,Lt),i=l.cartographicToCartesian(a,wt);o.pack(i,L,3*k)}let j=a.length,x=new Array(j),T=new Array(j),U=0,S=0;for(k=0;k<j;++k)x[k]=U,T[k]=S,U+=a[k],S+=i[k];let P=new Float32Array(3*b*2),O=new Uint16Array(2*b),F=new Uint32Array(T.length),B=new Uint32Array(i.length),C=[],Y={};for(k=0;k<j;++k)w=f[k],A(Y[w])?(Y[w].positionLength+=a[k],Y[w].indexLength+=i[k],Y[w].batchIds.push(k)):Y[w]={positionLength:a[k],indexLength:i[k],offset:0,indexOffset:0,batchIds:[k]};let G,H=0,V=0;for(w in Y)if(Y.hasOwnProperty(w)){G=Y[w],G.offset=H,G.indexOffset=V;let t=2*G.positionLength,e=2*G.indexLength+6*G.positionLength;H+=t,V+=e,G.indexLength=e}let D=[];for(w in Y)Y.hasOwnProperty(w)&&(G=Y[w],D.push({color:R.fromRgba(parseInt(w)),offset:G.indexOffset,count:G.indexLength,batchIds:G.batchIds}));for(k=0;k<j;++k){w=f[k],G=Y[w];let t=G.offset,e=3*t,r=t,b=x[k],y=a[k],N=s[k],E=m,j=p;A(d)&&A(I)&&(E=d[k],j=I[k]);let R=Number.POSITIVE_INFINITY,U=Number.NEGATIVE_INFINITY,S=Number.POSITIVE_INFINITY,W=Number.NEGATIVE_INFINITY;for(g=0;g<y;++g){let t=o.unpack(L,3*b+3*g,wt);l.scaleToGeodeticSurface(t,t);let n=l.cartesianToCartographic(t,Lt),a=n.latitude,i=n.longitude;R=Math.min(a,R),U=Math.max(a,U),S=Math.min(i,S),W=Math.max(i,W);let s=l.geodeticSurfaceNormal(t,Ht),f=o.multiplyByScalar(s,E,St),c=o.add(t,f,Ut);f=o.multiplyByScalar(s,j,f);let u=o.add(t,f,Ft);o.subtract(u,h,u),o.subtract(c,h,c),o.pack(u,P,e),o.pack(c,P,e+3),O[r]=N,O[r+1]=N,e+=6,r+=2}u=Mt,u.west=S,u.east=W,u.south=R,u.north=U,c[k]=M.fromRectangle(u,m,p,l);let H=G.indexOffset,V=T[k],D=i[k];for(F[k]=H,g=0;g<D;g+=3){let e=n[V+g]-b,r=n[V+g+1]-b,o=n[V+g+2]-b;C[H++]=2*e+t,C[H++]=2*r+t,C[H++]=2*o+t,C[H++]=2*o+1+t,C[H++]=2*r+1+t,C[H++]=2*e+1+t}for(g=0;g<y;++g){let e=g,n=(g+1)%y;C[H++]=2*e+1+t,C[H++]=2*n+t,C[H++]=2*e+t,C[H++]=2*e+1+t,C[H++]=2*n+1+t,C[H++]=2*n+t}G.offset+=2*y,G.indexOffset=H,B[k]=H-F[k]}C=W.createTypedArray(P.length/3,C);let _=D.length;for(let t=0;t<_;++t){let e=D[t].batchIds,n=0,r=e.length;for(let t=0;t<r;++t)n+=B[e[t]];D[t].count=n}let v=Ct(2===C.BYTES_PER_ELEMENT?W.UNSIGNED_SHORT:W.UNSIGNED_INT,c,D);return e.push(P.buffer,C.buffer,F.buffer,B.buffer,O.buffer,v.buffer),{positions:P.buffer,indices:C.buffer,indexOffsets:F.buffer,indexCounts:B.buffer,batchIds:O.buffer,packedBuffer:v.buffer}}var Jt=It(Rt);export{Jt as default};
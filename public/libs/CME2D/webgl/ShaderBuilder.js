const _0x166bae=_0xd0e5;function _0xd0e5(_0x22056c,_0x334c68){const _0x5a65a0=_0x5a65();return _0xd0e5=function(_0xd0e5f6,_0x8b6433){_0xd0e5f6=_0xd0e5f6-0x1b2;let _0x299349=_0x5a65a0[_0xd0e5f6];return _0x299349;},_0xd0e5(_0x22056c,_0x334c68);}(function(_0x45e81f,_0xc7897d){const _0x902c3=_0xd0e5,_0x23e7a5=_0x45e81f();while(!![]){try{const _0x389963=parseInt(_0x902c3(0x20e))/0x1*(parseInt(_0x902c3(0x1c5))/0x2)+parseInt(_0x902c3(0x1b2))/0x3+parseInt(_0x902c3(0x1f3))/0x4+-parseInt(_0x902c3(0x1b3))/0x5+parseInt(_0x902c3(0x217))/0x6+-parseInt(_0x902c3(0x1c9))/0x7*(-parseInt(_0x902c3(0x1b4))/0x8)+parseInt(_0x902c3(0x1b6))/0x9*(-parseInt(_0x902c3(0x1d3))/0xa);if(_0x389963===_0xc7897d)break;else _0x23e7a5['push'](_0x23e7a5['shift']());}catch(_0x131436){_0x23e7a5['push'](_0x23e7a5['shift']());}}}(_0x5a65,0x37bc9));import{LINESTRING_ANGLE_COSINE_CUTOFF}from'../render/webgl/utils.js';import{colorToGlsl,numberToGlsl,stringToGlsl}from'../expr/gpu.js';import{createDefaultStyle}from'../style/flat.js';export const COMMON_HEADER=_0x166bae(0x20c);function _0x5a65(){const _0x5e8122=['906084AGWVhR','circle-stroke-width','getSymbolFragmentShader','angle\x20+=\x20u_rotation;','getSymbolColorExpression','getStrokeColorExpression',';\x0a\x20\x20float\x20u\x20=\x20a_index\x20==\x200.0\x20||\x20a_index\x20==\x203.0\x20?\x20texCoord.s\x20:\x20texCoord.p;\x0a\x20\x20float\x20v\x20=\x20a_index\x20==\x202.0\x20||\x20a_index\x20==\x203.0\x20?\x20texCoord.t\x20:\x20texCoord.q;\x0a\x20\x20v_texCoord\x20=\x20vec2(u,\x20v);\x0a\x20\x20v_prop_hitColor\x20=\x20a_prop_hitColor;\x0a\x20\x20v_angle\x20=\x20angle;\x0a\x20\x20c\x20=\x20cos(-v_angle);\x0a\x20\x20s\x20=\x20sin(-v_angle);\x0a\x20\x20centerOffsetPx\x20=\x20vec2(c\x20*\x20centerOffsetPx.x\x20-\x20s\x20*\x20centerOffsetPx.y,\x20s\x20*\x20centerOffsetPx.x\x20+\x20c\x20*\x20centerOffsetPx.y);\x20\x0a\x20\x20v_centerPx\x20=\x20screenToPx(center.xy)\x20+\x20centerOffsetPx;\x0a','setStrokeMiterLimitExpression','push','\x0avarying\x20vec2\x20v_segmentStart;\x0avarying\x20vec2\x20v_segmentEnd;\x0avarying\x20float\x20v_angleStart;\x0avarying\x20float\x20v_angleEnd;\x0avarying\x20float\x20v_width;\x0avarying\x20vec4\x20v_prop_hitColor;\x0avarying\x20float\x20v_distanceOffsetPx;\x0avarying\x20float\x20v_measureStart;\x0avarying\x20float\x20v_measureEnd;\x0a','18174sQXmwh','1361165qNPgTT','232nNBlZj','addVertexShaderFunction','63FivfwC','fillColorExpression_','setStrokeDistanceFieldExpression','strokeCapExpression_',';\x0a\x20\x20float\x20joinType\x20=\x20',';\x0a\x20\x20float\x20capType\x20=\x20',')\x20{\x0a\x20\x20\x20\x20return\x20miterJoinDistanceField(point,\x20start,\x20end,\x20width,\x20joinAngle);\x0a\x20\x20}\x0a\x20\x20return\x20roundJoinDistanceField(point,\x20start,\x20end,\x20width);\x0a}\x0a\x0afloat\x20computeSegmentPointDistance(vec2\x20point,\x20vec2\x20start,\x20vec2\x20end,\x20float\x20width,\x20float\x20joinAngle,\x20float\x20capType,\x20float\x20joinType)\x20{\x0a\x20\x20if\x20(isCap(joinAngle))\x20{\x0a\x20\x20\x20\x20return\x20capDistanceField(point,\x20start,\x20end,\x20width,\x20capType);\x0a\x20\x20}\x0a\x20\x20return\x20joinDistanceField(point,\x20start,\x20end,\x20width,\x20joinAngle,\x20joinType);\x0a}\x0a\x0avoid\x20main(void)\x20{\x0a\x20\x20vec2\x20currentPoint\x20=\x20gl_FragCoord.xy\x20/\x20u_pixelRatio;\x0a\x20\x20#ifdef\x20GL_FRAGMENT_PRECISION_HIGH\x0a\x20\x20vec2\x20worldPos\x20=\x20pxToWorld(currentPoint);\x0a\x20\x20if\x20(\x0a\x20\x20\x20\x20abs(u_renderExtent[0]\x20-\x20u_renderExtent[2])\x20>\x200.0\x20&&\x20(\x0a\x20\x20\x20\x20\x20\x20worldPos[0]\x20<\x20u_renderExtent[0]\x20||\x0a\x20\x20\x20\x20\x20\x20worldPos[1]\x20<\x20u_renderExtent[1]\x20||\x0a\x20\x20\x20\x20\x20\x20worldPos[0]\x20>\x20u_renderExtent[2]\x20||\x0a\x20\x20\x20\x20\x20\x20worldPos[1]\x20>\x20u_renderExtent[3]\x0a\x20\x20\x20\x20)\x0a\x20\x20)\x20{\x0a\x20\x20\x20\x20discard;\x0a\x20\x20}\x0a\x20\x20#endif\x0a\x0a\x20\x20float\x20segmentLength\x20=\x20length(v_segmentEnd\x20-\x20v_segmentStart);\x0a\x20\x20vec2\x20segmentTangent\x20=\x20(v_segmentEnd\x20-\x20v_segmentStart)\x20/\x20segmentLength;\x0a\x20\x20vec2\x20segmentNormal\x20=\x20vec2(-segmentTangent.y,\x20segmentTangent.x);\x0a\x20\x20vec2\x20startToPoint\x20=\x20currentPoint\x20-\x20v_segmentStart;\x0a\x20\x20float\x20lengthToPoint\x20=\x20max(0.,\x20min(dot(segmentTangent,\x20startToPoint),\x20segmentLength));\x0a\x20\x20float\x20currentLengthPx\x20=\x20lengthToPoint\x20+\x20v_distanceOffsetPx;\x20\x0a\x20\x20float\x20currentRadiusPx\x20=\x20abs(dot(segmentNormal,\x20startToPoint));\x0a\x20\x20float\x20currentRadiusRatio\x20=\x20dot(segmentNormal,\x20startToPoint)\x20*\x202.\x20/\x20v_width;\x0a\x20\x20currentLineMetric\x20=\x20mix(v_measureStart,\x20v_measureEnd,\x20lengthToPoint\x20/\x20segmentLength);\x0a\x0a\x20\x20if\x20(','getStrokeFragmentShader','getSymbolOffsetExpression',')\x20{\x20discard;\x20}\x0a\x0a\x20\x20vec4\x20color\x20=\x20','symbolSizeExpression_','setSymbolColorExpression',';\x0a\x20\x20gl_FragColor.a\x20*=\x20u_globalAlpha;\x0a\x20\x20gl_FragColor.rgb\x20*=\x20gl_FragColor.a;\x0a\x20\x20if\x20(u_hitDetection\x20>\x200)\x20{\x0a\x20\x20\x20\x20if\x20(gl_FragColor.a\x20<\x200.1)\x20{\x20discard;\x20};\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20v_prop_hitColor;\x0a\x20\x20}\x0a}','bevel','setStrokeWidthExpression','8siYfQP','\x20=\x20','\x0avarying\x20vec4\x20v_prop_hitColor;\x0a','vec2(0.0)','70266OXQNJX','symbolRotationExpression_','strokeDistanceFieldExpression_',');\x0a\x20\x20color.a\x20*=\x20smoothstep(0.5,\x20-0.5,\x20distance);\x0a\x20\x20gl_FragColor\x20=\x20color;\x0a\x20\x20gl_FragColor.a\x20*=\x20u_globalAlpha;\x0a\x20\x20gl_FragColor.rgb\x20*=\x20gl_FragColor.a;\x0a\x20\x20if\x20(u_hitDetection\x20>\x200)\x20{\x0a\x20\x20\x20\x20if\x20(gl_FragColor.a\x20<\x200.1)\x20{\x20discard;\x20};\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20v_prop_hitColor;\x0a\x20\x20}\x0a}','vertexShaderFunctions_','miter',';\x0a\x20\x20vec2\x20offsetPx\x20=\x20centerOffsetPx;\x0a\x20\x20if\x20(a_index\x20==\x200.0)\x20{\x0a\x20\x20\x20\x20offsetPx\x20-=\x20halfSizePx;\x0a\x20\x20}\x20else\x20if\x20(a_index\x20==\x201.0)\x20{\x0a\x20\x20\x20\x20offsetPx\x20+=\x20halfSizePx\x20*\x20vec2(1.,\x20-1.);\x0a\x20\x20}\x20else\x20if\x20(a_index\x20==\x202.0)\x20{\x0a\x20\x20\x20\x20offsetPx\x20+=\x20halfSizePx;\x0a\x20\x20}\x20else\x20{\x0a\x20\x20\x20\x20offsetPx\x20+=\x20halfSizePx\x20*\x20vec2(-1.,\x201.);\x0a\x20\x20}\x0a\x20\x20float\x20angle\x20=\x20','getFillFragmentShader','10.','setTextureCoordinateExpression','498230DuVEGw','getFillVertexShader','addFragmentShaderFunction','attribute\x20',')\x20{\x20discard;\x20}\x0a\x20\x20vec2\x20coordsPx\x20=\x20gl_FragCoord.xy\x20/\x20u_pixelRatio\x20-\x20v_centerPx;\x20//\x20relative\x20to\x20center\x0a\x20\x20float\x20c\x20=\x20cos(v_angle);\x0a\x20\x20float\x20s\x20=\x20sin(v_angle);\x0a\x20\x20coordsPx\x20=\x20vec2(c\x20*\x20coordsPx.x\x20-\x20s\x20*\x20coordsPx.y,\x20s\x20*\x20coordsPx.x\x20+\x20c\x20*\x20coordsPx.y);\x0a\x20\x20gl_FragColor\x20=\x20',';\x0a\x20\x20float\x20segmentStartDistance\x20=\x20computeSegmentPointDistance(currentPoint,\x20v_segmentStart,\x20v_segmentEnd,\x20v_width,\x20v_angleStart,\x20capType,\x20joinType);\x0a\x20\x20float\x20segmentEndDistance\x20=\x20computeSegmentPointDistance(currentPoint,\x20v_segmentEnd,\x20v_segmentStart,\x20v_width,\x20v_angleEnd,\x20capType,\x20joinType);\x0a\x20\x20float\x20distance\x20=\x20max(\x0a\x20\x20\x20\x20segmentDistanceField(currentPoint,\x20v_segmentStart,\x20v_segmentEnd,\x20v_width),\x0a\x20\x20\x20\x20max(segmentStartDistance,\x20segmentEndDistance)\x0a\x20\x20);\x0a\x20\x20distance\x20=\x20max(distance,\x20','getFragmentDiscardExpression','\x0avarying\x20vec2\x20v_texCoord;\x0avarying\x20vec2\x20v_quadCoord;\x0avarying\x20vec4\x20v_prop_hitColor;\x0avarying\x20vec2\x20v_centerPx;\x0avarying\x20float\x20v_angle;\x0avarying\x20vec2\x20v_quadSizePx;\x0a','strokeMiterLimitExpression_','strokeColorExpression_','map','strokeOffsetExpression_','uniforms_','\x0aattribute\x20vec2\x20a_position;\x0aattribute\x20vec4\x20a_prop_hitColor;\x0a','uniform\x20','fill-color','getFillColorExpression','fragmentShaderFunctions_','varying\x20','symbolColorExpression_','circle-fill-color','type','hasFill_','includes','stroke-width','\x0avec2\x20worldToPx(vec2\x20worldPos)\x20{\x0a\x20\x20vec4\x20screenPos\x20=\x20u_projectionMatrix\x20*\x20vec4(worldPos,\x200.0,\x201.0);\x0a\x20\x20return\x20(0.5\x20*\x20screenPos.xy\x20+\x200.5)\x20*\x20u_viewportSizePx;\x0a}\x0a\x0avec4\x20pxToScreen(vec2\x20pxPos)\x20{\x0a\x20\x20vec2\x20screenPos\x20=\x202.0\x20*\x20pxPos\x20/\x20u_viewportSizePx\x20-\x201.0;\x0a\x20\x20return\x20vec4(screenPos,\x20u_depth,\x201.0);\x0a}\x0a\x0abool\x20isCap(float\x20joinAngle)\x20{\x0a\x20\x20return\x20joinAngle\x20<\x20-0.1;\x0a}\x0a\x0avec2\x20getJoinOffsetDirection(vec2\x20normalPx,\x20float\x20joinAngle)\x20{\x0a\x20\x20float\x20halfAngle\x20=\x20joinAngle\x20/\x202.0;\x0a\x20\x20float\x20c\x20=\x20cos(halfAngle);\x0a\x20\x20float\x20s\x20=\x20sin(halfAngle);\x0a\x20\x20vec2\x20angleBisectorNormal\x20=\x20vec2(s\x20*\x20normalPx.x\x20+\x20c\x20*\x20normalPx.y,\x20-c\x20*\x20normalPx.x\x20+\x20s\x20*\x20normalPx.y);\x0a\x20\x20float\x20length\x20=\x201.0\x20/\x20s;\x0a\x20\x20return\x20angleBisectorNormal\x20*\x20length;\x0a}\x0a\x0avec2\x20getOffsetPoint(vec2\x20point,\x20vec2\x20normal,\x20float\x20joinAngle,\x20float\x20offsetPx)\x20{\x0a\x20\x20//\x20if\x20on\x20a\x20cap\x20or\x20the\x20join\x20angle\x20is\x20too\x20high,\x20offset\x20the\x20line\x20along\x20the\x20segment\x20normal\x0a\x20\x20if\x20(cos(joinAngle)\x20>\x200.998\x20||\x20isCap(joinAngle))\x20{\x0a\x20\x20\x20\x20return\x20point\x20-\x20normal\x20*\x20offsetPx;\x0a\x20\x20}\x0a\x20\x20//\x20offset\x20is\x20applied\x20along\x20the\x20inverted\x20normal\x20(positive\x20offset\x20goes\x20\x22right\x22\x20relative\x20to\x20line\x20direction)\x0a\x20\x20return\x20point\x20-\x20getJoinOffsetDirection(normal,\x20joinAngle)\x20*\x20offsetPx;\x0a}\x0a\x0avoid\x20main(void)\x20{\x0a\x20\x20v_angleStart\x20=\x20a_joinAngles.x;\x0a\x20\x20v_angleEnd\x20=\x20a_joinAngles.y;\x0a\x20\x20float\x20vertexNumber\x20=\x20floor(abs(a_parameters)\x20/\x2010000.\x20+\x200.5);\x0a\x20\x20currentLineMetric\x20=\x20vertexNumber\x20<\x201.5\x20?\x20a_measureStart\x20:\x20a_measureEnd;\x0a\x20\x20//\x20we\x27re\x20reading\x20the\x20fractional\x20part\x20while\x20keeping\x20the\x20sign\x20(so\x20-4.12\x20gives\x20-0.12,\x203.45\x20gives\x200.45)\x0a\x20\x20float\x20angleTangentSum\x20=\x20fract(abs(a_parameters)\x20/\x2010000.)\x20*\x2010000.\x20*\x20sign(a_parameters);\x0a\x0a\x20\x20float\x20lineWidth\x20=\x20',';\x0a\x0a\x20\x20//\x20compute\x20segment\x20start/end\x20in\x20px\x20with\x20offset\x0a\x20\x20vec2\x20segmentStartPx\x20=\x20worldToPx(a_segmentStart);\x0a\x20\x20vec2\x20segmentEndPx\x20=\x20worldToPx(a_segmentEnd);\x0a\x20\x20vec2\x20tangentPx\x20=\x20normalize(segmentEndPx\x20-\x20segmentStartPx);\x0a\x20\x20vec2\x20normalPx\x20=\x20vec2(-tangentPx.y,\x20tangentPx.x);\x0a\x20\x20segmentStartPx\x20=\x20getOffsetPoint(segmentStartPx,\x20normalPx,\x20v_angleStart,\x20lineOffsetPx),\x0a\x20\x20segmentEndPx\x20=\x20getOffsetPoint(segmentEndPx,\x20normalPx,\x20v_angleEnd,\x20lineOffsetPx);\x0a\x20\x20\x0a\x20\x20//\x20compute\x20current\x20vertex\x20position\x0a\x20\x20float\x20normalDir\x20=\x20vertexNumber\x20<\x200.5\x20||\x20(vertexNumber\x20>\x201.5\x20&&\x20vertexNumber\x20<\x202.5)\x20?\x201.0\x20:\x20-1.0;\x0a\x20\x20float\x20tangentDir\x20=\x20vertexNumber\x20<\x201.5\x20?\x201.0\x20:\x20-1.0;\x0a\x20\x20float\x20angle\x20=\x20vertexNumber\x20<\x201.5\x20?\x20v_angleStart\x20:\x20v_angleEnd;\x0a\x20\x20vec2\x20joinDirection;\x0a\x20\x20vec2\x20positionPx\x20=\x20vertexNumber\x20<\x201.5\x20?\x20segmentStartPx\x20:\x20segmentEndPx;\x0a\x20\x20//\x20if\x20angle\x20is\x20too\x20high,\x20do\x20not\x20make\x20a\x20proper\x20join\x0a\x20\x20if\x20(cos(angle)\x20>\x20','\x0aattribute\x20vec2\x20a_position;\x0aattribute\x20float\x20a_index;\x0aattribute\x20vec4\x20a_prop_hitColor;\x0a','stroke-color','expression',')\x20{\x0a\x20\x20\x20\x20return\x20squareCapDistanceField(point,\x20start,\x20end,\x20width);\x0a\x20\x20}\x0a\x20\x20return\x20roundCapDistanceField(point,\x20start,\x20end,\x20width);\x0a}\x0a\x0afloat\x20joinDistanceField(vec2\x20point,\x20vec2\x20start,\x20vec2\x20end,\x20float\x20width,\x20float\x20joinAngle,\x20float\x20joinType)\x20{\x0a\x20\x20if\x20(joinType\x20==\x20',';\x0a\x20\x20gl_FragColor.rgb\x20*=\x20gl_FragColor.a;\x0a\x20\x20if\x20(u_hitDetection\x20>\x200)\x20{\x0a\x20\x20\x20\x20if\x20(gl_FragColor.a\x20<\x200.05)\x20{\x20discard;\x20};\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20v_prop_hitColor;\x0a\x20\x20}\x0a}','1134516gBNxsK','setSymbolRotationExpression','round',';\x0a\x20\x20','vec4(0.0,\x200.0,\x201.0,\x201.0)','strokeWidthExpression_','\x0avoid\x20main(void)\x20{\x0a\x20\x20gl_Position\x20=\x20u_projectionMatrix\x20*\x20vec4(a_position,\x20u_depth,\x201.0);\x0a\x20\x20v_prop_hitColor\x20=\x20a_prop_hitColor;\x0a','join','hasSymbol_','symbolRotateWithView_','setSymbolRotateWithView','\x0avarying\x20vec2\x20v_texCoord;\x0avarying\x20vec4\x20v_prop_hitColor;\x0avarying\x20vec2\x20v_centerPx;\x0avarying\x20float\x20v_angle;\x0avarying\x20vec2\x20v_quadSizePx;\x0a','hasStroke_',';\x0a\x20\x20float\x20lineOffsetPx\x20=\x20','attributes_','symbolOffsetExpression_','-1000.','texCoordExpression_','addUniform','\x20||\x20isCap(angle))\x20{\x0a\x20\x20\x20\x20joinDirection\x20=\x20normalPx\x20*\x20normalDir\x20-\x20tangentPx\x20*\x20tangentDir;\x0a\x20\x20}\x20else\x20{\x0a\x20\x20\x20\x20joinDirection\x20=\x20getJoinOffsetDirection(normalPx\x20*\x20normalDir,\x20angle);\x0a\x20\x20}\x0a\x20\x20positionPx\x20=\x20positionPx\x20+\x20joinDirection\x20*\x20(lineWidth\x20*\x200.5\x20+\x201.);\x20//\x20adding\x201\x20pixel\x20for\x20antialiasing\x0a\x20\x20gl_Position\x20=\x20pxToScreen(positionPx);\x0a\x0a\x20\x20v_segmentStart\x20=\x20segmentStartPx;\x0a\x20\x20v_segmentEnd\x20=\x20segmentEndPx;\x0a\x20\x20v_width\x20=\x20lineWidth;\x0a\x20\x20v_prop_hitColor\x20=\x20a_prop_hitColor;\x0a\x20\x20v_distanceOffsetPx\x20=\x20a_distance\x20/\x20u_resolution\x20-\x20(lineOffsetPx\x20*\x20angleTangentSum);\x0a\x20\x20v_measureStart\x20=\x20a_measureStart;\x0a\x20\x20v_measureEnd\x20=\x20a_measureEnd;\x0a','setStrokeCapExpression','\x0aattribute\x20vec2\x20a_segmentStart;\x0aattribute\x20vec2\x20a_segmentEnd;\x0aattribute\x20float\x20a_measureStart;\x0aattribute\x20float\x20a_measureEnd;\x0aattribute\x20float\x20a_parameters;\x0aattribute\x20float\x20a_distance;\x0aattribute\x20vec2\x20a_joinAngles;\x0aattribute\x20vec4\x20a_prop_hitColor;\x0a',')\x20{\x0a\x20\x20\x20\x20return\x20bevelJoinField(point,\x20start,\x20end,\x20width,\x20joinAngle);\x0a\x20\x20}\x20else\x20if\x20(joinType\x20==\x20','discardExpression_','getSymbolSizeExpression','#ifdef\x20GL_FRAGMENT_PRECISION_HIGH\x0aprecision\x20highp\x20float;\x0a#else\x0aprecision\x20mediump\x20float;\x0a#endif\x0auniform\x20mat4\x20u_projectionMatrix;\x0auniform\x20mat4\x20u_screenToWorldMatrix;\x0auniform\x20vec2\x20u_viewportSizePx;\x0auniform\x20float\x20u_pixelRatio;\x0auniform\x20float\x20u_globalAlpha;\x0auniform\x20float\x20u_time;\x0auniform\x20float\x20u_zoom;\x0auniform\x20float\x20u_resolution;\x0auniform\x20float\x20u_rotation;\x0auniform\x20vec4\x20u_renderExtent;\x0auniform\x20vec2\x20u_patternOrigin;\x0auniform\x20float\x20u_depth;\x0auniform\x20mediump\x20int\x20u_hitDetection;\x0a\x0aconst\x20float\x20PI\x20=\x203.141592653589793238;\x0aconst\x20float\x20TWO_PI\x20=\x202.0\x20*\x20PI;\x0afloat\x20currentLineMetric\x20=\x200.;\x20//\x20an\x20actual\x20value\x20will\x20be\x20used\x20in\x20the\x20stroke\x20shaders\x0a','varyings_','29372ypMPNr','\x0a\x20\x20float\x20c\x20=\x20cos(-angle);\x0a\x20\x20float\x20s\x20=\x20sin(-angle);\x0a\x20\x20offsetPx\x20=\x20vec2(c\x20*\x20offsetPx.x\x20-\x20s\x20*\x20offsetPx.y,\x20s\x20*\x20offsetPx.x\x20+\x20c\x20*\x20offsetPx.y);\x0a\x20\x20vec4\x20center\x20=\x20u_projectionMatrix\x20*\x20vec4(a_position,\x200.0,\x201.0);\x0a\x20\x20gl_Position\x20=\x20center\x20+\x20vec4(pxToScreen(offsetPx),\x20u_depth,\x200.);\x0a\x20\x20vec4\x20texCoord\x20=\x20','0.0',';\x0a\x20\x20if\x20(miterLength\x20>\x20miterLimit)\x20{\x0a\x20\x20\x20\x20return\x20bevelJoinField(point,\x20start,\x20end,\x20width,\x20joinAngle);\x0a\x20\x20}\x0a\x20\x20return\x20-1000.;\x0a}\x0a\x0afloat\x20capDistanceField(vec2\x20point,\x20vec2\x20start,\x20vec2\x20end,\x20float\x20width,\x20float\x20capType)\x20{\x0a\x20\x20\x20if\x20(capType\x20==\x20','addVarying','name','strokeJoinExpression_','false','setFragmentDiscardExpression'];_0x5a65=function(){return _0x5e8122;};return _0x5a65();}const DEFAULT_STYLE=createDefaultStyle();export class ShaderBuilder{constructor(){const _0x471c84=_0x166bae;this[_0x471c84(0x1df)]=[],this[_0x471c84(0x201)]=[],this[_0x471c84(0x20d)]=[],this[_0x471c84(0x1fb)]=![],this[_0x471c84(0x1c0)]='vec2('+numberToGlsl(DEFAULT_STYLE['circle-radius'])+'\x20+\x20'+numberToGlsl(DEFAULT_STYLE[_0x471c84(0x218)]*0.5)+')',this['symbolRotationExpression_']=_0x471c84(0x210),this[_0x471c84(0x202)]=_0x471c84(0x1c8),this['symbolColorExpression_']=colorToGlsl(DEFAULT_STYLE[_0x471c84(0x1e7)]),this[_0x471c84(0x204)]=_0x471c84(0x1f7),this[_0x471c84(0x20a)]=_0x471c84(0x215),this[_0x471c84(0x1fc)]=![],this['hasStroke_']=![],this[_0x471c84(0x1f8)]=numberToGlsl(DEFAULT_STYLE[_0x471c84(0x1eb)]),this['strokeColorExpression_']=colorToGlsl(DEFAULT_STYLE[_0x471c84(0x1ef)]),this[_0x471c84(0x1de)]='0.',this['strokeCapExpression_']=stringToGlsl(_0x471c84(0x1f5)),this['strokeJoinExpression_']=stringToGlsl(_0x471c84(0x1f5)),this['strokeMiterLimitExpression_']=_0x471c84(0x1d1),this[_0x471c84(0x1cb)]=_0x471c84(0x203),this[_0x471c84(0x1e9)]=![],this[_0x471c84(0x1b7)]=colorToGlsl(DEFAULT_STYLE[_0x471c84(0x1e2)]),this[_0x471c84(0x1cd)]=[],this[_0x471c84(0x1e4)]=[];}[_0x166bae(0x205)](_0x3cb3a4){const _0x24b47e=_0x166bae;return this[_0x24b47e(0x1df)][_0x24b47e(0x21f)](_0x3cb3a4),this;}['addAttribute'](_0x3f5400){const _0x406d8b=_0x166bae;return this[_0x406d8b(0x201)]['push'](_0x3f5400),this;}[_0x166bae(0x212)](_0x1ee61f,_0x46235a,_0x1a59f4){return this['varyings_']['push']({'name':_0x1ee61f,'type':_0x46235a,'expression':_0x1a59f4}),this;}['setSymbolSizeExpression'](_0x222d47){const _0x36cc57=_0x166bae;return this[_0x36cc57(0x1fb)]=!![],this['symbolSizeExpression_']=_0x222d47,this;}[_0x166bae(0x20b)](){return this['symbolSizeExpression_'];}[_0x166bae(0x1f4)](_0x1a9d81){const _0x6c8cc0=_0x166bae;return this[_0x6c8cc0(0x1ca)]=_0x1a9d81,this;}['setSymbolOffsetExpression'](_0x8b580d){return this['symbolOffsetExpression_']=_0x8b580d,this;}[_0x166bae(0x1be)](){const _0x607a85=_0x166bae;return this[_0x607a85(0x202)];}[_0x166bae(0x1c1)](_0x3608bc){const _0x241f7c=_0x166bae;return this[_0x241f7c(0x1fb)]=!![],this['symbolColorExpression_']=_0x3608bc,this;}[_0x166bae(0x21b)](){return this['symbolColorExpression_'];}[_0x166bae(0x1d2)](_0x1e1243){const _0x131ccf=_0x166bae;return this[_0x131ccf(0x204)]=_0x1e1243,this;}[_0x166bae(0x216)](_0x67e287){const _0x54dc49=_0x166bae;return this[_0x54dc49(0x20a)]=_0x67e287,this;}[_0x166bae(0x1d9)](){const _0x5088b0=_0x166bae;return this[_0x5088b0(0x20a)];}[_0x166bae(0x1fd)](_0x3731ab){return this['symbolRotateWithView_']=_0x3731ab,this;}[_0x166bae(0x1c4)](_0x4e4a89){const _0x306b55=_0x166bae;return this[_0x306b55(0x1ff)]=!![],this[_0x306b55(0x1f8)]=_0x4e4a89,this;}['setStrokeColorExpression'](_0x188c00){const _0xe3031f=_0x166bae;return this[_0xe3031f(0x1ff)]=!![],this[_0xe3031f(0x1dc)]=_0x188c00,this;}[_0x166bae(0x21c)](){const _0x5330e8=_0x166bae;return this[_0x5330e8(0x1dc)];}['setStrokeOffsetExpression'](_0x550a6c){const _0x75be65=_0x166bae;return this[_0x75be65(0x1de)]=_0x550a6c,this;}[_0x166bae(0x207)](_0x427313){const _0x12a521=_0x166bae;return this[_0x12a521(0x1b9)]=_0x427313,this;}['setStrokeJoinExpression'](_0x3e9dae){const _0x425cac=_0x166bae;return this[_0x425cac(0x214)]=_0x3e9dae,this;}[_0x166bae(0x21e)](_0x53032b){const _0x1b9818=_0x166bae;return this[_0x1b9818(0x1db)]=_0x53032b,this;}[_0x166bae(0x1b8)](_0x5c9f2f){return this['strokeDistanceFieldExpression_']=_0x5c9f2f,this;}['setFillColorExpression'](_0x55a38f){const _0x24dca4=_0x166bae;return this[_0x24dca4(0x1e9)]=!![],this[_0x24dca4(0x1b7)]=_0x55a38f,this;}[_0x166bae(0x1e3)](){const _0xb34b8d=_0x166bae;return this[_0xb34b8d(0x1b7)];}[_0x166bae(0x1b5)](_0x478320){const _0x563ccb=_0x166bae;if(this[_0x563ccb(0x1cd)]['includes'](_0x478320))return;this[_0x563ccb(0x1cd)]['push'](_0x478320);}[_0x166bae(0x1d5)](_0x5b117f){const _0x3db2dd=_0x166bae;if(this[_0x3db2dd(0x1e4)][_0x3db2dd(0x1ea)](_0x5b117f))return;this[_0x3db2dd(0x1e4)][_0x3db2dd(0x21f)](_0x5b117f);}['getSymbolVertexShader'](){const _0x5e1b4c=_0x166bae;if(!this[_0x5e1b4c(0x1fb)])return null;return COMMON_HEADER+'\x0a'+this[_0x5e1b4c(0x1df)][_0x5e1b4c(0x1dd)](function(_0x1a8a55){return'uniform\x20'+_0x1a8a55+';';})[_0x5e1b4c(0x1fa)]('\x0a')+_0x5e1b4c(0x1ee)+this['attributes_'][_0x5e1b4c(0x1dd)](function(_0x52085e){const _0x288990=_0x5e1b4c;return _0x288990(0x1d6)+_0x52085e+';';})['join']('\x0a')+_0x5e1b4c(0x1da)+this[_0x5e1b4c(0x20d)][_0x5e1b4c(0x1dd)](function(_0x2620d1){const _0x126ef6=_0x5e1b4c;return'varying\x20'+_0x2620d1[_0x126ef6(0x1e8)]+'\x20'+_0x2620d1[_0x126ef6(0x213)]+';';})[_0x5e1b4c(0x1fa)]('\x0a')+'\x0a'+this[_0x5e1b4c(0x1cd)][_0x5e1b4c(0x1fa)]('\x0a')+'\x0avec2\x20pxToScreen(vec2\x20coordPx)\x20{\x0a\x20\x20vec2\x20scaled\x20=\x20coordPx\x20/\x20u_viewportSizePx\x20/\x200.5;\x0a\x20\x20return\x20scaled;\x0a}\x0a\x0avec2\x20screenToPx(vec2\x20coordScreen)\x20{\x0a\x20\x20return\x20(coordScreen\x20*\x200.5\x20+\x200.5)\x20*\x20u_viewportSizePx;\x0a}\x0a\x0avoid\x20main(void)\x20{\x0a\x20\x20v_quadSizePx\x20=\x20'+this[_0x5e1b4c(0x1c0)]+';\x0a\x20\x20vec2\x20halfSizePx\x20=\x20v_quadSizePx\x20*\x200.5;\x0a\x20\x20vec2\x20centerOffsetPx\x20=\x20'+this[_0x5e1b4c(0x202)]+_0x5e1b4c(0x1cf)+this[_0x5e1b4c(0x1ca)]+_0x5e1b4c(0x1f6)+(this[_0x5e1b4c(0x1fc)]?_0x5e1b4c(0x21a):'')+_0x5e1b4c(0x20f)+this[_0x5e1b4c(0x204)]+_0x5e1b4c(0x21d)+this['varyings_'][_0x5e1b4c(0x1dd)](function(_0x4f53e8){const _0x79e1f6=_0x5e1b4c;return'\x20\x20'+_0x4f53e8[_0x79e1f6(0x213)]+'\x20=\x20'+_0x4f53e8[_0x79e1f6(0x1f0)]+';';})[_0x5e1b4c(0x1fa)]('\x0a')+'\x0a}';}[_0x166bae(0x219)](){const _0x2e6fbe=_0x166bae;if(!this['hasSymbol_'])return null;return COMMON_HEADER+'\x0a'+this['uniforms_'][_0x2e6fbe(0x1dd)](function(_0x17de3b){const _0x1fa691=_0x2e6fbe;return _0x1fa691(0x1e1)+_0x17de3b+';';})['join']('\x0a')+_0x2e6fbe(0x1fe)+this['varyings_'][_0x2e6fbe(0x1dd)](function(_0x45a3dc){const _0xf003a4=_0x2e6fbe;return _0xf003a4(0x1e5)+_0x45a3dc[_0xf003a4(0x1e8)]+'\x20'+_0x45a3dc['name']+';';})[_0x2e6fbe(0x1fa)]('\x0a')+'\x0a'+this[_0x2e6fbe(0x1e4)][_0x2e6fbe(0x1fa)]('\x0a')+'\x0a\x0avoid\x20main(void)\x20{\x0a\x20\x20if\x20('+this['discardExpression_']+_0x2e6fbe(0x1d7)+this[_0x2e6fbe(0x1e6)]+_0x2e6fbe(0x1f2);}['getStrokeVertexShader'](){const _0xf8c689=_0x166bae;if(!this[_0xf8c689(0x1ff)])return null;return COMMON_HEADER+'\x0a'+this[_0xf8c689(0x1df)]['map'](function(_0x3fe9f6){const _0x13cde6=_0xf8c689;return _0x13cde6(0x1e1)+_0x3fe9f6+';';})[_0xf8c689(0x1fa)]('\x0a')+_0xf8c689(0x208)+this[_0xf8c689(0x201)]['map'](function(_0x4e5954){const _0x1969e0=_0xf8c689;return _0x1969e0(0x1d6)+_0x4e5954+';';})[_0xf8c689(0x1fa)]('\x0a')+'\x0avarying\x20vec2\x20v_segmentStart;\x0avarying\x20vec2\x20v_segmentEnd;\x0avarying\x20float\x20v_angleStart;\x0avarying\x20float\x20v_angleEnd;\x0avarying\x20float\x20v_width;\x0avarying\x20vec4\x20v_prop_hitColor;\x0avarying\x20float\x20v_distanceOffsetPx;\x0avarying\x20float\x20v_measureStart;\x0avarying\x20float\x20v_measureEnd;\x0a'+this[_0xf8c689(0x20d)][_0xf8c689(0x1dd)](function(_0x197b74){const _0x2d45c3=_0xf8c689;return _0x2d45c3(0x1e5)+_0x197b74[_0x2d45c3(0x1e8)]+'\x20'+_0x197b74[_0x2d45c3(0x213)]+';';})[_0xf8c689(0x1fa)]('\x0a')+'\x0a'+this[_0xf8c689(0x1cd)]['join']('\x0a')+_0xf8c689(0x1ec)+this[_0xf8c689(0x1f8)]+_0xf8c689(0x200)+this[_0xf8c689(0x1de)]+_0xf8c689(0x1ed)+LINESTRING_ANGLE_COSINE_CUTOFF+_0xf8c689(0x206)+this['varyings_'][_0xf8c689(0x1dd)](function(_0x4adbec){const _0x14486d=_0xf8c689;return'\x20\x20'+_0x4adbec[_0x14486d(0x213)]+_0x14486d(0x1c6)+_0x4adbec[_0x14486d(0x1f0)]+';';})[_0xf8c689(0x1fa)]('\x0a')+'\x0a}';}[_0x166bae(0x1bd)](){const _0x24d5e6=_0x166bae;if(!this[_0x24d5e6(0x1ff)])return null;return COMMON_HEADER+'\x0a'+this['uniforms_'][_0x24d5e6(0x1dd)](function(_0x293888){const _0x21aa1a=_0x24d5e6;return _0x21aa1a(0x1e1)+_0x293888+';';})[_0x24d5e6(0x1fa)]('\x0a')+_0x24d5e6(0x220)+this['varyings_']['map'](function(_0x1e6ad9){const _0x57c725=_0x24d5e6;return _0x57c725(0x1e5)+_0x1e6ad9[_0x57c725(0x1e8)]+'\x20'+_0x1e6ad9['name']+';';})[_0x24d5e6(0x1fa)]('\x0a')+'\x0a'+this[_0x24d5e6(0x1e4)][_0x24d5e6(0x1fa)]('\x0a')+'\x0a\x0avec2\x20pxToWorld(vec2\x20pxPos)\x20{\x0a\x20\x20vec2\x20screenPos\x20=\x202.0\x20*\x20pxPos\x20/\x20u_viewportSizePx\x20-\x201.0;\x0a\x20\x20return\x20(u_screenToWorldMatrix\x20*\x20vec4(screenPos,\x200.0,\x201.0)).xy;\x0a}\x0a\x0abool\x20isCap(float\x20joinAngle)\x20{\x0a\x20\x20return\x20joinAngle\x20<\x20-0.1;\x0a}\x0a\x0afloat\x20segmentDistanceField(vec2\x20point,\x20vec2\x20start,\x20vec2\x20end,\x20float\x20width)\x20{\x0a\x20\x20vec2\x20tangent\x20=\x20normalize(end\x20-\x20start);\x0a\x20\x20vec2\x20normal\x20=\x20vec2(-tangent.y,\x20tangent.x);\x0a\x20\x20vec2\x20startToPoint\x20=\x20point\x20-\x20start;\x0a\x20\x20return\x20abs(dot(startToPoint,\x20normal))\x20-\x20width\x20*\x200.5;\x0a}\x0a\x0afloat\x20buttCapDistanceField(vec2\x20point,\x20vec2\x20start,\x20vec2\x20end)\x20{\x0a\x20\x20vec2\x20startToPoint\x20=\x20point\x20-\x20start;\x0a\x20\x20vec2\x20tangent\x20=\x20normalize(end\x20-\x20start);\x0a\x20\x20return\x20dot(startToPoint,\x20-tangent);\x0a}\x0a\x0afloat\x20squareCapDistanceField(vec2\x20point,\x20vec2\x20start,\x20vec2\x20end,\x20float\x20width)\x20{\x0a\x20\x20return\x20buttCapDistanceField(point,\x20start,\x20end)\x20-\x20width\x20*\x200.5;\x0a}\x0a\x0afloat\x20roundCapDistanceField(vec2\x20point,\x20vec2\x20start,\x20vec2\x20end,\x20float\x20width)\x20{\x0a\x20\x20float\x20onSegment\x20=\x20max(0.,\x201000.\x20*\x20dot(point\x20-\x20start,\x20end\x20-\x20start));\x20//\x20this\x20is\x20very\x20high\x20when\x20inside\x20the\x20segment\x0a\x20\x20return\x20length(point\x20-\x20start)\x20-\x20width\x20*\x200.5\x20-\x20onSegment;\x0a}\x0a\x0afloat\x20roundJoinDistanceField(vec2\x20point,\x20vec2\x20start,\x20vec2\x20end,\x20float\x20width)\x20{\x0a\x20\x20return\x20roundCapDistanceField(point,\x20start,\x20end,\x20width);\x0a}\x0a\x0afloat\x20bevelJoinField(vec2\x20point,\x20vec2\x20start,\x20vec2\x20end,\x20float\x20width,\x20float\x20joinAngle)\x20{\x0a\x20\x20vec2\x20startToPoint\x20=\x20point\x20-\x20start;\x0a\x20\x20vec2\x20tangent\x20=\x20normalize(end\x20-\x20start);\x0a\x20\x20float\x20c\x20=\x20cos(joinAngle\x20*\x200.5);\x0a\x20\x20float\x20s\x20=\x20sin(joinAngle\x20*\x200.5);\x0a\x20\x20float\x20direction\x20=\x20-sign(sin(joinAngle));\x0a\x20\x20vec2\x20bisector\x20=\x20vec2(c\x20*\x20tangent.x\x20-\x20s\x20*\x20tangent.y,\x20s\x20*\x20tangent.x\x20+\x20c\x20*\x20tangent.y);\x0a\x20\x20float\x20radius\x20=\x20width\x20*\x200.5\x20*\x20s;\x0a\x20\x20return\x20dot(startToPoint,\x20bisector\x20*\x20direction)\x20-\x20radius;\x0a}\x0a\x0afloat\x20miterJoinDistanceField(vec2\x20point,\x20vec2\x20start,\x20vec2\x20end,\x20float\x20width,\x20float\x20joinAngle)\x20{\x0a\x20\x20if\x20(cos(joinAngle)\x20>\x20'+LINESTRING_ANGLE_COSINE_CUTOFF+')\x20{\x20//\x20avoid\x20risking\x20a\x20division\x20by\x20zero\x0a\x20\x20\x20\x20return\x20bevelJoinField(point,\x20start,\x20end,\x20width,\x20joinAngle);\x0a\x20\x20}\x0a\x20\x20float\x20miterLength\x20=\x201.\x20/\x20sin(joinAngle\x20*\x200.5);\x0a\x20\x20float\x20miterLimit\x20=\x20'+this[_0x24d5e6(0x1db)]+_0x24d5e6(0x211)+stringToGlsl('butt')+')\x20{\x0a\x20\x20\x20\x20return\x20buttCapDistanceField(point,\x20start,\x20end);\x0a\x20\x20}\x20else\x20if\x20(capType\x20==\x20'+stringToGlsl('square')+_0x24d5e6(0x1f1)+stringToGlsl(_0x24d5e6(0x1c3))+_0x24d5e6(0x209)+stringToGlsl(_0x24d5e6(0x1ce))+_0x24d5e6(0x1bc)+this[_0x24d5e6(0x20a)]+_0x24d5e6(0x1bf)+this[_0x24d5e6(0x1dc)]+_0x24d5e6(0x1bb)+this[_0x24d5e6(0x1b9)]+_0x24d5e6(0x1ba)+this['strokeJoinExpression_']+_0x24d5e6(0x1d8)+this[_0x24d5e6(0x1cb)]+_0x24d5e6(0x1cc);}[_0x166bae(0x1d4)](){const _0x9eb291=_0x166bae;if(!this[_0x9eb291(0x1e9)])return null;return COMMON_HEADER+'\x0a'+this[_0x9eb291(0x1df)][_0x9eb291(0x1dd)](function(_0x492b64){const _0x3d5d0c=_0x9eb291;return _0x3d5d0c(0x1e1)+_0x492b64+';';})['join']('\x0a')+_0x9eb291(0x1e0)+this[_0x9eb291(0x201)][_0x9eb291(0x1dd)](function(_0xefd4f8){const _0x599849=_0x9eb291;return _0x599849(0x1d6)+_0xefd4f8+';';})[_0x9eb291(0x1fa)]('\x0a')+'\x0avarying\x20vec4\x20v_prop_hitColor;\x0a'+this['varyings_'][_0x9eb291(0x1dd)](function(_0x18266f){const _0x2bc581=_0x9eb291;return _0x2bc581(0x1e5)+_0x18266f['type']+'\x20'+_0x18266f['name']+';';})['join']('\x0a')+'\x0a'+this[_0x9eb291(0x1cd)][_0x9eb291(0x1fa)]('\x0a')+_0x9eb291(0x1f9)+this[_0x9eb291(0x20d)][_0x9eb291(0x1dd)](function(_0x3aa00e){const _0x84516b=_0x9eb291;return'\x20\x20'+_0x3aa00e['name']+'\x20=\x20'+_0x3aa00e[_0x84516b(0x1f0)]+';';})[_0x9eb291(0x1fa)]('\x0a')+'\x0a}';}[_0x166bae(0x1d0)](){const _0x4526de=_0x166bae;if(!this['hasFill_'])return null;return COMMON_HEADER+'\x0a'+this[_0x4526de(0x1df)]['map'](function(_0x37f9fd){const _0x11d6c6=_0x4526de;return _0x11d6c6(0x1e1)+_0x37f9fd+';';})[_0x4526de(0x1fa)]('\x0a')+_0x4526de(0x1c7)+this[_0x4526de(0x20d)][_0x4526de(0x1dd)](function(_0x1cec2c){const _0x779fa=_0x4526de;return'varying\x20'+_0x1cec2c[_0x779fa(0x1e8)]+'\x20'+_0x1cec2c[_0x779fa(0x213)]+';';})['join']('\x0a')+'\x0a'+this['fragmentShaderFunctions_'][_0x4526de(0x1fa)]('\x0a')+'\x0avec2\x20pxToWorld(vec2\x20pxPos)\x20{\x0a\x20\x20vec2\x20screenPos\x20=\x202.0\x20*\x20pxPos\x20/\x20u_viewportSizePx\x20-\x201.0;\x0a\x20\x20return\x20(u_screenToWorldMatrix\x20*\x20vec4(screenPos,\x200.0,\x201.0)).xy;\x0a}\x0a\x0avec2\x20worldToPx(vec2\x20worldPos)\x20{\x0a\x20\x20vec4\x20screenPos\x20=\x20u_projectionMatrix\x20*\x20vec4(worldPos,\x200.0,\x201.0);\x0a\x20\x20return\x20(0.5\x20*\x20screenPos.xy\x20+\x200.5)\x20*\x20u_viewportSizePx;\x0a}\x0a\x0avoid\x20main(void)\x20{\x0a\x20\x20vec2\x20pxPos\x20=\x20gl_FragCoord.xy\x20/\x20u_pixelRatio;\x0a\x20\x20vec2\x20pxOrigin\x20=\x20worldToPx(u_patternOrigin);\x0a\x20\x20#ifdef\x20GL_FRAGMENT_PRECISION_HIGH\x0a\x20\x20vec2\x20worldPos\x20=\x20pxToWorld(pxPos);\x0a\x20\x20if\x20(\x0a\x20\x20\x20\x20abs(u_renderExtent[0]\x20-\x20u_renderExtent[2])\x20>\x200.0\x20&&\x20(\x0a\x20\x20\x20\x20\x20\x20worldPos[0]\x20<\x20u_renderExtent[0]\x20||\x0a\x20\x20\x20\x20\x20\x20worldPos[1]\x20<\x20u_renderExtent[1]\x20||\x0a\x20\x20\x20\x20\x20\x20worldPos[0]\x20>\x20u_renderExtent[2]\x20||\x0a\x20\x20\x20\x20\x20\x20worldPos[1]\x20>\x20u_renderExtent[3]\x0a\x20\x20\x20\x20)\x0a\x20\x20)\x20{\x0a\x20\x20\x20\x20discard;\x0a\x20\x20}\x0a\x20\x20#endif\x0a\x20\x20if\x20('+this[_0x4526de(0x20a)]+')\x20{\x20discard;\x20}\x0a\x20\x20gl_FragColor\x20=\x20'+this[_0x4526de(0x1b7)]+_0x4526de(0x1c2);}}